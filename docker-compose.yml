services:
  postgres:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    container_name: postgres
    volumes:
      - ~/.pg/pg_data/410simple-project:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    deploy:
      restart_policy:
        condition: any
  
  flask:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: flask
    volumes:
      - ~/.uploads/images/410simple-project:/app/app/static/upload
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 8080
    image: ghcr.io/artikson/sample-site-flask
    deploy:
      restart_policy:
        condition: any

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./nginx
    container_name: nginx
    depends_on:
      - flask
    ports:
      - "8080:80"
<<<<<<< HEAD
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
=======
>>>>>>> ca3a8e12dba7995ebb7b21fbeaf027b055444135
    image: ghcr.io/artikson/sample-site-nginx
    deploy:
      restart_policy:
        condition: any
